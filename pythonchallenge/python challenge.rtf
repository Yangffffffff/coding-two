{\rtf1\ansi\ansicpg936\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Bold;\f1\fnil\fcharset0 HelveticaNeue-Medium;}
{\colortbl;\red255\green255\blue255;\red27\green31\blue35;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c14118\c16078\c18431;\cssrgb\c100000\c100000\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab560
\pard\pardeftab560\slleading20\partightenfactor0

\f0\b\fs26 \cf0 Level 0\
print 2**38\
\
Level 1\
# s = raw_input()\
# s = list(s)\
# for i in range(len(s)):\
#     if 'a' <= s[i] <= 'z':\
#         num = ord(s[i]) + 2\
#         if num > ord('z'): s[i] = chr(ord('a') + num - ord('z') - 1)\
#         else: s[i] = chr(num)\
#     if 'A' <= s[i] <= 'Z':\
#         num = ord(s[i]) + 2\
#         if num > ord('Z'): s[i] = chr(ord('A') + num - ord('Z') - 1)\
#         else: s[i] = chr(num)\
# print ''.join(s)\
\
from string import maketrans\
s = raw_input()\
upper = []\
low = []\
for i in range(24):\
    low.append(chr(ord('a') + i + 2))\
    upper.append(chr(ord('A') + i + 2))\
for i in range(2):\
    low.append(chr(ord('a') + i))\
    upper.append(chr(ord('A') + i))\
change = ''.join(low + upper)\
upper = maketrans('', '')[65:91]\
low = maketrans('', '')[97:123]\
source = low + upper\
print s.translate(maketrans(source, change))\
\
Level 2\
# def cmp(x, y):\
#     if x[1] > y[1]: return 1\
#     elif x[1] < y[1]: return -1\
#     else: return 0\
#     \
# File = open('data.txt', 'r')\
# dic = \{\}\
# for line in File:\
#     for c in line:\
#         if c in dic: dic[c] = dic[c] + 1\
#         else: dic[c] = 0\
# char_num = dic.items()\
# char_num.sort(cmp)\
# for i in range(len(char_num)):\
#     print char_num[i][0], char_num[i][1]\
# s = ""\
# for i in range(8):\
#     s+= char_num[i][0]\
# print s\
\
try:\
    File = open('data.txt', 'r')\
    rare_char = ""\
    while True:\
        char = File.read(1)\
        if char.isalpha(): rare_char += char\
        if not char: break\
finally:\
    File.close()\
    print rare_char\
\
\
Level 3\
import re\
\
ans = ''\
pattern = re.compile('[^A-Z][A-Z]\{3\}([a-z])[A-Z]\{3\}[^A-Z]')\
try:\
    f = open('data.txt', 'r')\
    cnt = 0\
    for line in f:\
        cnt += 1\
        result = re.search(pattern, line)\
        if result: \
            ans += result.group(1)\
            print cnt\
finally:\
    f.close\
    print ans\
\
Level 4\
import re\
from urllib import urlopen\
\
url = 'http://www.pythonchallenge.com/pc/def/linkedlist.php?nothing=' \
nothing = '12345'\
pattern = re.compile('[0-9]+')\
while nothing.isdigit():\
    if nothing == '16044': nothing = '8022'\
    if nothing == '82683': nothing = '63579'\
    text = urlopen(url+nothing).read()\
    result = re.search(pattern, text)\
    if result: nothing = result.group(0)\
    print nothing\
\
Level 5\
import re, pickle\
from urllib import urlopen\
\
url = 'http://www.pythonchallenge.com/pc/def/banner.p' \
text = urlopen(url).read()\
rel = pickle.loads(text)\
for list in rel:\
    print ''.join(t[0]*t[1] for t in list)\
\
\
\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 \
\pard\pardeftab720\sa320\partightenfactor0

\f1\fs36 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
}